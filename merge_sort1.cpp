#include<iostream>
using namespace std;

int A[] = {};

void merge(int arr[], int left, int mid, int right) {
    int n1 = mid - left + 1;
    int n2 = right - mid;
    int L[n1], R[n2];
    for(int i = 0; i < n1; ++i) {
        L[i] = arr[left + i];
    }
    for(int i = 0; i < n2; ++i) {
        R[i] = arr[mid + i + 1];
    }

    int i = 0, j = 0, k = left;
    while(i < n1 && j < n2) {
        if(L[i] <= R[j]) {
            arr[k++] = L[i++];
            /* i++; k++; */
        } else {
            arr[k++] = R[j++];
            /* j++; k++; */
        }
    }

    while(i < n1) {
        arr[k++] = L[i++];
        /* i++; k++; */
    }

    while(j < n2) {
        arr[k++] = R[j++];
        /* j++; k++; */
    }
}

void mergeSort(int arr[], int l, int r) {
    if(l < r) {
        int mid = l + (r - l) / 2;
        mergeSort(arr, l, mid);
        mergeSort(arr, mid + 1, r);
        merge(arr, l, mid, r);
    }
}

int main() {
    int n;
    cin >> n;
    /* int arr[n]; */
    /* for(int i = 0; i < n; ++i) { */
    /*     cin >> arr[i]; */
    /* } */
    mergeSort(A, 0, n - 1);
    for(int i : A) cout << i << ' ';
    return 0;
}
